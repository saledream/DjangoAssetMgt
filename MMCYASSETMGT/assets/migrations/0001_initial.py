# Generated by Django 5.1.6 on 2025-03-31 15:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Laptop',
            fields=[
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('serial_number', models.CharField(blank=True, max_length=1000, null=True)),
                ('os', models.CharField(blank=True, max_length=1000, null=True)),
                ('local_disk', models.FloatField(blank=True, null=True)),
                ('ram', models.FloatField(blank=True, null=True)),
                ('cpu', models.CharField(blank=True, max_length=1000, null=True)),
                ('vendor', models.CharField(blank=True, max_length=100, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('bitlocker', models.CharField(blank=True, max_length=100, null=True)),
                ('onedrive', models.CharField(blank=True, max_length=100, null=True)),
                ('domain', models.CharField(blank=True, max_length=100, null=True)),
                ('logon_account', models.CharField(blank=True, max_length=100, null=True)),
                ('vpn', models.CharField(blank=True, max_length=100, null=True)),
                ('licensed', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyboard_name', models.CharField(max_length=100)),
                ('keyboard_model', models.CharField(max_length=100)),
                ('keyboard_vendor', models.CharField(max_length=100)),
                ('keyboard_serial_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('connected_data', models.DateTimeField()),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='InstalledSoftware',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=100)),
                ('installation_date', models.DateField()),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Headset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('headset_name', models.CharField(max_length=100)),
                ('headset_model', models.CharField(max_length=100)),
                ('headset_vendor', models.CharField(max_length=100)),
                ('headset_serial_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='DockingStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docking_station_name', models.CharField(max_length=100)),
                ('docking_station_model', models.CharField(max_length=100)),
                ('docking_station_vendor', models.CharField(max_length=100)),
                ('docking_station_serial_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('connected_data', models.DateTimeField()),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='DevicePerformanceHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('disk_free', models.FloatField(blank=True, null=True)),
                ('ram_free', models.FloatField(blank=True, null=True)),
                ('cpu_usage', models.FloatField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_history', to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='DevicePerformance',
            fields=[
                ('id', models.CharField(max_length=1000, primary_key=True, serialize=False)),
                ('disk_free', models.FloatField(blank=True, null=True)),
                ('ram_free', models.FloatField(blank=True, null=True)),
                ('cpu_usage', models.FloatField(blank=True, null=True)),
                ('sent_bytes', models.FloatField(blank=True, null=True)),
                ('receive_bytes', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='CapacityManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_usage', models.CharField(help_text='Disk Usage in percentage', max_length=100)),
                ('ram_free', models.CharField(help_text='RAM Free in percentage', max_length=100)),
                ('cpu_free', models.CharField(help_text='CPU Free in percentage', max_length=100)),
                ('network_bandwidth', models.CharField(help_text='Network Bandwidth in Mbps', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitor_name', models.CharField(max_length=100)),
                ('monitor_model', models.CharField(max_length=100)),
                ('monitor_vendor', models.CharField(max_length=100)),
                ('monitor_serial_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('connected_data', models.DateTimeField()),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mouse_name', models.CharField(max_length=100)),
                ('mouse_model', models.CharField(max_length=100)),
                ('mouse_vendor', models.CharField(max_length=100)),
                ('mouse_serial_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('connected_data', models.DateTimeField()),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='PatchManagement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hotfixid', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('installedOn', models.CharField(blank=True, max_length=100, null=True)),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_number', models.IntegerField()),
                ('protocol', models.CharField(max_length=50)),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='RunningProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_id', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('user', models.CharField(max_length=100)),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Threat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threat_name', models.CharField(max_length=100)),
                ('threat_type', models.CharField(max_length=100)),
                ('threat_severity', models.CharField(max_length=100)),
                ('Laptop', models.ManyToManyField(to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='UsbFlashDrive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usb_flash_drive_name', models.CharField(max_length=100)),
                ('usb_flash_drive_model', models.CharField(max_length=100)),
                ('usb_flash_drive_vendor', models.CharField(max_length=100)),
                ('usb_flash_drive_serial_number', models.CharField(max_length=100)),
                ('status', models.CharField(max_length=100)),
                ('connected_data', models.DateTimeField()),
                ('Laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Vulnerability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('critical_vulnerability', models.CharField(max_length=100)),
                ('high_vulnerability', models.CharField(max_length=100)),
                ('medium_vulnerability', models.CharField(max_length=100)),
                ('low_vulnerability', models.IntegerField()),
                ('total_vulnerability', models.IntegerField()),
                ('Laptop', models.ManyToManyField(to='assets.laptop')),
            ],
        ),
        migrations.CreateModel(
            name='Vulnerable_softwares',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_name', models.CharField(max_length=100)),
                ('software_version', models.CharField(max_length=100)),
                ('software_status', models.CharField(max_length=100)),
                ('software_severity', models.CharField(max_length=100)),
                ('Laptop', models.ManyToManyField(to='assets.laptop')),
            ],
        ),
    ]
